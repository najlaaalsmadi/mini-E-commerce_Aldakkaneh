@model mini_E_commerce_Aldakkaneh.Models.Customer

@{
    ViewBag.Title = "التسجيل";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<br />
<br />
<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="container">
        <div class="row">
            <!-- Left side: Form -->
            <div class="col-lg-6 col-md-8 mx-auto">
                <div class="card border-0 shadow-lg h-100" style="background-color: white;">
                    <div class="card-body p-5">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            <h3 class="text-center mb-4" style="color: #001f3f;">التسجيل حساب</h3>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.first_name, "الاسم الأول", htmlAttributes: new { @class = "form-label", style = "color: #001f3f;" })
                                    @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control", style = "border-color: #001f3f; color: #001f3f;" } })
                                    @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.last_name, "الاسم الأخير", htmlAttributes: new { @class = "form-label", style = "color: #001f3f;" })
                                    @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control", style = "border-color: #001f3f; color: #001f3f;" } })
                                    @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.email, "البريد الإلكتروني", htmlAttributes: new { @class = "form-label", style = "color: #001f3f;" })
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", style = "border-color: #001f3f; color: #001f3f;" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.password, "كلمة المرور", htmlAttributes: new { @class = "form-label", style = "color: #001f3f;" })
                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", type = "password", style = "border-color: #001f3f; color: #001f3f;" } })
                                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.address, "العنوان", htmlAttributes: new { @class = "form-label", style = "color: #001f3f;" })
                                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", style = "border-color: #001f3f; color: #001f3f;" } })
                                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-6 mb-3">
                                    @Html.LabelFor(model => model.phone_number, "رقم الهاتف", htmlAttributes: new { @class = "form-label", style = "color: #001f3f;" })
                                    @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { @class = "form-control", style = "border-color: #001f3f; color: #001f3f;" } })
                                    @Html.ValidationMessageFor(model => model.phone_number, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="d-grid justify-content-center ">
                                <input type="submit" value="تسجيل" class="btn btn-lg " style="background-color: #001f3f; color: white; " />
                            </div>

                            <div class="text-center mt-4">
                                <p>هل لديك حساب بالفعل؟ @Html.ActionLink("تسجيل", "Login", null, new { @class = "text-primary" })</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Right side: Image -->
            <div class="col-lg-6 col-md-4 d-none d-lg-block">
                <div class="h-100">
                    <img src="~/imges/welcome page.png" alt="Welcome Image" class="img-fluid h-100 w-100" style="object-fit: cover;" />

                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @if (TempData["SuccessMessage"] != null)
    {
        <script type="text/javascript">
            document.addEventListener("DOMContentLoaded", function() {
                Swal.fire({
                    icon: 'success',
                    title: 'تم التسجيل بنجاح',
                    text: '@TempData["SuccessMessage"]'
                });
            });
        </script>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <script type="text/javascript">
            document.addEventListener("DOMContentLoaded", function() {
                Swal.fire({
                    icon: 'error',
                    title: 'خطأ',
                    text: '@TempData["ErrorMessage"]'
                });
            });
        </script>
    }
}


